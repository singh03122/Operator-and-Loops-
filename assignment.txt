Q1. What is statically typed and Dynamically typed Programming Language.

Ans:- Statically Typed Programming Languages
Type Checking: In statically typed languages, type checking occurs at compile-time. This means that the type of a variable (such as integer, string, etc.) is known and enforced before the program runs.
Examples: C, C++, Java, and Rust.

Dynamically Typed Programming Languages
Type Checking: In dynamically typed languages, type checking occurs at runtime. The type of a variable is determined as the program runs, based on the value assigned to it.
Examples: Python, JavaScript, Ruby, and PHP.

Q2. What is the variable in Java?

Ans :- A variable is a container that holds data that can be used and manipulated within a program. Each variable in Java has a specific type, which determines what kind of data it can store, such as integers, floating-point numbers, characters, or references to objects.

Q3. How To Assign a Value To Variable ?

Ans :- 
Assigning a value to a variable in Java involves using the assignment operator (=). The syntax is straightforward: you specify the variable's name, followed by the = operator, and then the value you want to assign to that variable.

Syntax:
java-
variableName = value.

Q4. What are Primitive Data types in Java ?

Ans :- Primitive data types are the most basic data types that are not objects and represent simple values. Java has eight primitive data types, each with its own characteristics in terms of the kind of data it can store, the range of values it can represent, and the memory it consumes.

The Eight Primitive Data Types in Java:
 
     1. Bit
     2.Short
     3.Int
     4.Long
     5.float
     6.Double
     7.Boolean
     8.Char

Q5. What are the Identifiers in Java ?

Ans :- identifiers are the names given to various elements in a program, such as variables, methods, classes, interfaces, and packages. Identifiers are used to uniquely identify these elements within the code.

Q6.%5 List the Operators in Java ?

Ans :-  a variety of operators that are used to perform operations on variables and values. These operators are categorized based on the type of operation they perform. Here is a list of the main types of operators in Java:

1. Arithmetic Operators
These operators are used to perform basic mathematical operations.

+ : Addition (also used for string concatenation)
- : Subtraction
* : Multiplication
/ : Division
% : Modulus (remainder of division)
++ : Increment (increases value by 1)
-- : Decrement (decreases value by 1)
2. Relational (Comparison) Operators
These operators are used to compare two values or expressions.

== : Equal to
!= : Not equal to
> : Greater than
< : Less than
>= : Greater than or equal to
<= : Less than or equal to
3. Logical Operators
These operators are used to combine multiple boolean expressions or to negate the result of a boolean expression.

&& : Logical AND (true if both operands are true)
|| : Logical OR (true if at least one operand is true)
! : Logical NOT (inverts the value of a boolean)
4. Bitwise Operators
These operators are used to perform bit-level operations on integer types.

& : Bitwise AND
| : Bitwise OR
^ : Bitwise XOR (exclusive OR)
~ : Bitwise NOT
<< : Left shift
>> : Right shift
>>> : Unsigned right shift
5. Assignment Operators
These operators are used to assign values to variables.

= : Simple assignment
+= : Add and assign (e.g., x += 3 is equivalent to x = x + 3)
-= : Subtract and assign (e.g., x -= 3 is equivalent to x = x - 3)

Q7. Explain about Increment and Decrement operators and give an examples ?

Ans :- increment and decrement operators are unary operators that modify the value of a variable by either increasing or decreasing it by one. These operators are commonly used in loops and other situations where you need to adjust a variable's value repeatedly.

Increment Operator (++)
The increment operator increases the value of a variable by 1.

Prefix Increment (++variable): The variable is incremented first, and then its new value is used in the expression.
Postfix Increment (variable++): The variable's original value is used in the expression first, and then it is incremented.
Decrement Operator (--)
The decrement operator decreases the value of a variable by 1.

Prefix Decrement (--variable): The variable is decremented first, and then its new value is used in the expression.
Postfix Decrement (variable--): The variable's original value is used in the expression first, and then it is decremented.